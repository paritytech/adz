# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Rust.gitlab-ci.yml

# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/rust/tags
image: "ubuntu:21.10"
# Optional: Pick zero or more services to be used on all builds.
# Only needed when using a docker container to run your tests in.
# Check out: http://docs.gitlab.com/ee/ci/docker/using_docker_images.html#what-is-a-service
# services:
#   - mysql:latest
#   - redis:latest
#   - postgres:latest

# Optional: Install a C compiler, cmake and git into the container.
# You will often need this when you (or any of your dependencies) depends on C code.
# before_script:
#   - apt-get update -yqq
#   - apt-get install -yqq --no-install-recommends build-essential



build:cargo:
  variables:
    DEBIAN_FRONTEND: "noninteractive"
  script:
    - apt-get update
    - apt-get install -y cmake pkg-config libssl-dev git build-essential clang libclang-dev curl
    - curl https://sh.rustup.rs -sSf | sh -s -- -y
    - source ~/.cargo/env
    - rustup override set nightly-2022-02-16
    - rustup toolchain install nightly-2022-02-16
    - rustup target add wasm32-unknown-unknown --toolchain nightly-2022-02-16
    - rustup default nightly-2022-02-16
    - rustc --version && cargo --version  # Print version info for debugging
    - rustup toolchain list
    - cargo build

# Use cargo to test the project
test:cargo:
  script:
    - cargo test --verbose
  needs: ["build:cargo"]

# Use cargo to test the project
artifacts:cargo:
  script:
    - cargo build-spec > spec.json
  artifacts:
    paths:
      - spec.json
      - target/debug/parachain-collator
  needs: ["build:cargo"]
